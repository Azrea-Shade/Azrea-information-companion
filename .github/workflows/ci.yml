name: ci

on:
  push:
    branches: [ "testing/v1.0.0" ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    if: ${{ github.ref == 'refs/heads/testing/v1.0.0' }}
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Validate workflow branch guards (testing-only)
        shell: pwsh
        run: |
          $ErrorActionPreference = 'Stop'
          $files = Get-ChildItem ".github/workflows" -Recurse -Include *.yml,*.yaml
          if (-not $files) { Write-Host "No workflow files found."; exit 0 }
          $failed = $false
          foreach ($f in $files) {
            $t = Get-Content $f.FullName -Raw
            if ($t -notmatch "testing/v1\.0\.0") { Write-Error "Missing 'testing/v1.0.0' in $($f.FullName)"; $failed = $true }
            if ($t -notmatch "github\.ref\s*==\s*'refs/heads/testing/v1\.0\.0'") { Write-Error "Missing job guard in $($f.FullName)"; $failed = $true }
          }
          if ($failed) { throw "Workflow guard check failed." }
          Write-Host "✅ Workflow guards OK."

  tests:
    if: ${{ github.ref == 'refs/heads/testing/v1.0.0' }}
    runs-on: windows-latest
    needs: lint
    env:
      DOTNET_NOLOGO: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: .NET SDK info
        run: dotnet --info

      - name: Restore projects
        run: |
          dotnet restore tests/Unit/Unit.csproj
          dotnet restore src/Cli/Cli.csproj
          dotnet restore src/App/App.csproj

      - name: Run unit tests (coverage → artifacts/tests)
        run: dotnet test tests/Unit/Unit.csproj --collect:"XPlat Code Coverage" --logger "trx;LogFileName=test_results.trx" --results-directory artifacts/tests

      - name: Upload test results (.trx)
        uses: actions/upload-artifact@v4
        with:
          name: test-results-trx
          path: artifacts/tests/**/*.trx
          if-no-files-found: warn

      - name: Upload code coverage (cobertura)
        uses: actions/upload-artifact@v4
        with:
          name: code-coverage
          path: artifacts/tests/**/coverage.cobertura.xml
          if-no-files-found: warn

      - name: CLI smoke (headless)
        run: dotnet run --project src/Cli/Cli.csproj -c Release

      - name: Upload CLI output
        uses: actions/upload-artifact@v4
        with:
          name: cli_out
          path: src/Cli/cli_out
          if-no-files-found: warn

  build:
    if: ${{ github.ref == 'refs/heads/testing/v1.0.0' }}
    runs-on: windows-latest
    needs: tests
    env:
      DOTNET_NOLOGO: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: .NET SDK info
        run: dotnet --info

      - name: Restore App
        run: dotnet restore src/App/App.csproj

      - name: Build WPF
        run: dotnet build src/App/App.csproj -c Release --no-restore

      - name: Publish WPF (artifact only; NOT a GitHub release)
        run: dotnet publish src/App/App.csproj -c Release -r win-x64 --self-contained true -p:PublishSingleFile=true -p:IncludeNativeLibrariesForSelfExtract=true -o out/win-x64

      - name: Upload app artifact
        uses: actions/upload-artifact@v4
        with:
          name: Azrea-Companion-win-x64
          path: out/win-x64
          if-no-files-found: error
