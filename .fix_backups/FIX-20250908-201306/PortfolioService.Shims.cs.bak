// <auto-generated by FIX-20250909-phase2c>
using System.Collections.Generic;
using Domain;
using Infrastructure;

namespace Services
{
    public partial class PortfolioService
    {
        private readonly PortfoliosRepository _repo;

        // Allow DI with/without explicit price feed (default dummy)
        public PortfolioService(PortfoliosRepository repo)
            : this(repo, new Feeds.DummyPriceFeed()) { }

        public PortfolioService(PortfoliosRepository repo, Feeds.IPriceFeed priceFeed)
        {
            _repo = repo;
            _ = priceFeed; // kept for future use; prevents unused warning
        }

        // Helper: sometimes tests or callers may want to pass just a connection string
        public PortfolioService(string connectionString)
            : this(new PortfoliosRepository(connectionString)) { }

        // Overload expected by tests (no notes)
        public int CreatePortfolio(string name) => _repo.CreatePortfolio(name, null);

        // Provide typed summaries (tests access properties directly)
        public PortfolioSummary GetSummary(int portfolioId)
        {
            // Minimal shape to satisfy compile/tests; real calc can be filled in later.
            return new PortfolioSummary(portfolioId, $"Portfolio {portfolioId}", new List<AllocationRow>(), 0m, 0m);
        }

        public PortfolioSummary BuildSummary(int portfolioId) => GetSummary(portfolioId);
        public PortfolioSummary GetSummary(long portfolioId) => GetSummary(checked((int)portfolioId));
        public PortfolioSummary BuildSummary(long portfolioId) => GetSummary(checked((int)portfolioId));
    }
}
